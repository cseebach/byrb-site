// Generated by CoffeeScript 1.7.1
(function() {
  var TO_2, TO_32, stripLeadingZeroes;

  TO_32 = {
    "00000": "0",
    "00001": "1",
    "00010": "2",
    "00011": "3",
    "00100": "4",
    "00101": "5",
    "00110": "6",
    "00111": "7",
    "01000": "8",
    "01001": "9",
    "01010": "a",
    "01011": "b",
    "01100": "c",
    "01101": "d",
    "01110": "e",
    "01111": "f",
    "10000": "g",
    "10001": "h",
    "10010": "j",
    "10011": "k",
    "10100": "m",
    "10101": "n",
    "10110": "p",
    "10111": "q",
    "11000": "r",
    "11001": "s",
    "11010": "t",
    "11011": "v",
    "11100": "w",
    "11101": "x",
    "11110": "y",
    "11111": "z"
  };

  TO_2 = {
    "0": "00000",
    "1": "00001",
    "2": "00010",
    "3": "00011",
    "4": "00100",
    "5": "00101",
    "6": "00110",
    "7": "00111",
    "8": "01000",
    "9": "01001",
    "a": "01010",
    "b": "01011",
    "c": "01100",
    "d": "01101",
    "e": "01110",
    "f": "01111",
    "g": "10000",
    "h": "10001",
    "j": "10010",
    "k": "10011",
    "m": "10100",
    "n": "10101",
    "p": "10110",
    "q": "10111",
    "r": "11000",
    "s": "11001",
    "t": "11010",
    "v": "11011",
    "w": "11100",
    "x": "11101",
    "y": "11110",
    "z": "11111"
  };

  window.pad = function(string, length) {
    while (string.length < length) {
      string = "0" + string;
    }
    return string;
  };

  stripLeadingZeroes = function(string) {
    while (string.slice(0, 1) === "0") {
      string = string.slice(1);
    }
    return string;
  };

  window.toBase32 = function(binary) {
    var chunk, result;
    if (binary.length % 5 !== 0) {
      binary = pad(binary, binary.length + 5 - (binary.length % 5));
    }
    result = "";
    while (binary) {
      chunk = binary.slice(0, 5);
      binary = binary.slice(5);
      result += TO_32[chunk];
    }
    return stripLeadingZeroes(result);
  };

  window.toBinary = function(base36) {
    var chunk, result;
    result = "";
    while (base36) {
      chunk = base36.slice(0, 1);
      base36 = base36.slice(1);
      result += TO_2[chunk];
    }
    return stripLeadingZeroes(result);
  };

}).call(this);

//# sourceMappingURL=convert.map
